image: productize/kicad:4.0.7

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
#variables:
#  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
#cache:
#  paths:
#    - .cache/pip
#    - venv/

before_script:
  - python -V               # Print out python version for debugging
  - apt-get -V -s upgrade kicad | grep -i version
  #- apt-get update
  #- apt-get install -y python-pip
  #- python -m pip install virtualenv
  #- virtualenv venv
  #- source venv/bin/activate

.test_all:
  script:
  #- grep assert -R . --include="*.py" --exclude-dir="venv/" -l
  - find . -iname "*.py" -not -iwholename "./venv/*"
    | while read f; do
        echo;
        echo ++++ START TEST $f;
        python "$f" --test || echo $f failed >> errors;
        echo ++++ END TEST $f;
      done
  - if [ -f errors ]; then
      echo ++++ SUMMARY FAILED TESTS;
      cat errors;
      exit 1;
    fi

test:
  image: productize/kicad:4.0.7
  extends: .test_all

#run:
#  script:
#  - python setup.py bdist_wheel
#  # an alternative approach is to install and run:
#  - pip install dist/*
#  # run the command here
#  #artifacts:
#    paths:
#    - dist/*.whl

#pages:
#  script:
#  - pip install sphinx sphinx-rtd-theme
#  - cd doc ; make html
#  - mv build/html/ ../public/
#  artifacts:
#    paths:
#    - public
#  only:
#  - master
